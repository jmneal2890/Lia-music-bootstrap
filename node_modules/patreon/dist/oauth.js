'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

exports.default = function (clientId, clientSecret) {
    var baseParams = {
        client_id: clientId,
        client_secret: clientSecret
    };

    function get(code, redirectUri, callback) {
        return updateToken(_extends({}, baseParams, {
            code: code,
            grant_type: 'authorization_code',
            redirect_uri: redirectUri
        }), callback);
    }

    function refresh(token, callback) {
        return updateToken(_extends({}, baseParams, {
            refresh_token: token,
            grant_type: 'refresh_token'
        }), callback);
    }

    function updateToken(params, callback) {
        var url = 'https://api.patreon.com/oauth2/token';
        var _req = {
            method: 'POST',
            headers: {
                'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'
            },
            body: _formUrlencoded2.default.encode(params),
            params: params,
            credentials: 'include',
            compress: false
        };

        var _res = void 0;
        (0, _isomorphicFetch2.default)(url, _req).then(function (res) {
            _res = res;return res.json();
        }).then(function (json) {
            if (json.error) callback(handleError(json.error)(json, _req, _res));

            callback(null, json, _res);
        }).catch(function (err) {
            return callback(err);
        });
    }

    return {
        getTokens: get,
        refreshToken: refresh
    };
};

var _isomorphicFetch = require('isomorphic-fetch');

var _isomorphicFetch2 = _interopRequireDefault(_isomorphicFetch);

var _verror = require('verror');

var _verror2 = _interopRequireDefault(_verror);

var _formUrlencoded = require('form-urlencoded');

var _formUrlencoded2 = _interopRequireDefault(_formUrlencoded);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var expectedErrorMap = {
    invalid_grant: function invalid_grant(body, _req) {
        return new _verror2.default('Invalid grant_type: "%s"', _req.params.grant_type);
    },

    invalid_client: function invalid_client(body, _req) {
        return new _verror2.default('Invalid client_id: %s', _req.params.client_id);
    }
};

function handleError(err) {
    var errFn = typeof expectedErrorMap[err] === 'function' ? expectedErrorMap[err] : function (body) {
        return new _verror2.default('Unknown error: %s, %s', err, body);
    };

    return function (body, req, res) {
        var _err = errFn(body, req, res);
        _err.params = req.params;
        return _err;
    };
}